'copyright (C) Kroc Camen 2018, BSD 2-clause

$CONSOLE
_CONSOLE OFF

'hide the main window until we have something rendered on it first
$SCREENHIDE

'disallow resizing of the window. this adds a great deal of complexity for
'very little gain right now and there isn't an easy way to restore a window
'to its 1:1 size
$RESIZE:OFF

'set ALT+ENTER to switch to 4:3 aspect ratio, with anti-aliasing;
'many thanks Fellippe Heitor for implementing this!
_ALLOWFULLSCREEN _SQUAREPIXELS, _SMOOTH

'=============================================================================

'$INCLUDE:'lib\INI-Manager\ini.bi'

'$INCLUDE:'lib\consts.bi'
'$INCLUDE:'lib\reg.bi'

'$INCLUDE:'tui\tui.bi'

'=============================================================================

'$INCLUDE:'inc\tags.bi'
'$INCLUDE:'inc\games.bi'
'$INCLUDE:'inc\engines.bi'

'-----------------------------------------------------------------------------

'generic 'index' counter
DIM i AS _UNSIGNED LONG

'the folder where config files are kept
DIM SHARED DIR_CONFIG$
LET DIR_CONFIG$ = "config\"

'folder for the 'source ports' -- game engines
DIM SHARED DIR_PORTS$
LET DIR_PORTS$ = "ports\"

'folder for the user's save files
DIM SHARED DIR_SAVES$
LET DIR_SAVES$ = "saves\"

'folder for external executables;
'such as patching utilities
DIM SHARED DIR_TOOLS$
LET DIR_TOOLS$ = "tools\"

'folder for WADs -- the game files to play
DIM SHARED DIR_WADS$
LET DIR_WADS$ = "wads\"

'folder for demo-files (i.e. recorded runs)
DIM SHARED DIR_DEMOS$
LET DIR_DEMOS$ = "demos\"

'folder for gameplay mods
DIM SHARED DIR_MODS$
LET DIR_MODS$ = "mods\"

'read system info:
'-----------------------------------------------------------------------------
'get CPU type for the system (32 / 64-bit)
DIM SHARED CPU_BIT AS _UNSIGNED LONG
'default to 32-bit as this will always work
LET CPU_BIT = 32
'check the environment variables for CPU type:
'this one would only be true if we are a 64-bit executable also
IF ENVIRON$("PROCESSOR_ARCHITECTURE") = "AMD64" THEN LET CPU_BIT = 64
'detect 64-bit system from a 32-bit executable (WOW64)
IF ENVIRON$("PROCESSOR_ARCHITEW6432") = "AMD64" THEN LET CPU_BIT = 64

'directory of this executable (regardless of where it was called from)
DIM SHARED DIR_EXE$
LET DIR_EXE$ = Paths_AddSlash$(_CWD$)

'now, is this executable running from the source code folder or from within
'PortaDOOM's folder (as it would be in releases)? since these are different
'directories, and the launcher operates on the assumption that it's in the
'"PortaDOOM\files" folder, we need to re-route things when running from
'development builds. check to see if our parent folder is not "files":

IF Paths_GetFolderName$(DIR_EXE$) = "launcher" THEN
    'change directory to the expected location
    CHDIR "..\..\PortaDOOM\files"
    LET DIR_EXE$ = Paths_AddSlash$(_CWD$)
END IF

'the 'current directory' (where this executable was called *from*),
'this will be one of the folders we check when searching for files
DIM SHARED DIR_CUR$
LET DIR_CUR$ = Paths_AddSlash$(_STARTDIR$)

_ECHO ""
_ECHO "launcher.exe : " + DIR_EXE$
_ECHO "current dir  : " + DIR_CUR$
_ECHO ""


'=============================================================================
'MAIN:
'=============================================================================
_TITLE "PortaDOOM Launcher"

'set graphics mode, screen size, colour and clear screen
SCREEN SCREEN_MODE, , 0, 0: WIDTH SCREEN_WIDTH, SCREEN_HEIGHT

'print base UI:
DIM SHARED ui_titlebar AS _UNSIGNED _BYTE
DIM SHARED ui_statusbar AS _UNSIGNED _BYTE
LET ui_titlebar = TUI_DesktopBars_Add(1, BLACK, LTGREY, _TITLE$, "")
LET ui_statusbar = TUI_DesktopBars_Add(_HEIGHT, BLACK, LTGREY, "", "...")
CALL TUI_Render

_SCREENSHOW

'process command line / enumerate games:
'-----------------------------------------------------------------------------
IF _COMMANDCOUNT = 0 THEN
    'TODO: if there are no command-line parameters, we present a UI to build
    '      a custom game configuration?
    SYSTEM 1
END IF

'read command-line parameters
'$INCLUDE:'inc\cmd.bm'

'select game:
'-----------------------------------------------------------------------------
'TODO: game selection window, if there are more than 1 games defined
CALL Games_Select(1)

'enumerate engines:
'-----------------------------------------------------------------------------
CALL TUI_DesktopBars_Update(ui_statusbar, "Enumerating Engines...", "")
CALL TUI_Render

'search through the "ports" folder for game engines and read in their details.
'this also builds a set of look-up tables for cross-referencing tags with
'games and engines so that we can filter out incompatible engines
CALL Engines_Enumerate

CALL Engines_Filter

'clean-up UI
CALL TUI_DesktopBars_Update(ui_statusbar, "", "")
CALL TUI_Render

SummaryScreen:
'=============================================================================
REM '$INCLUDE:'inc\ui_summary.bm'

launch:
'=============================================================================
'$INCLUDE:'inc\launch.bm'

'=============================================================================

'$INCLUDE:'inc\tags.bm'
'$INCLUDE:'inc\games.bm'
'$INCLUDE:'inc\engines.bm'
'$INCLUDE:'inc\wads.bm'

'=============================================================================

'$INCLUDE:'lib\INI-Manager\ini.bm'

'$INCLUDE:'lib\strings.bm'
'$INCLUDE:'lib\paths.bm'
'$INCLUDE:'lib\reg.bm'

'$INCLUDE:'tui\tui.bm'

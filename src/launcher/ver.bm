'copyright (C) Kroc Camen 2018-2021, BSD 2-clause
'ver.bm : version number handling functions

'=============================================================================
SUB STR2VER(verstr$, ver AS VerNum)
    ' ensure defaults of 0
    ' (if we don't do this, we can get values from uninitialised memory!)
    LET ver.major = 0
    LET ver.minor = 0
    LET ver.patch = 0
    LET ver.build = 0
    
    'any periods at all?
    IF INSTR(1, verstr$, ".") = 0 THEN
        LET ver.major = VAL(verstr$)
        EXIT SUB
    END IF
    
    DIM count%, find%, num%
    DO
        'find the next period (if any)
        find% = INSTR(1, verstr$, ".")
        'a period was found
        IF find% THEN
            'extract the number
            LET num% = VAL(LEFT$(verstr$, find% - 1))
            'trim the string accordingly
            LET verstr$ = MID$(verstr$, find% + 1)
        ELSE
            LET num% = VAL(verstr$)
            'store the number
        END IF
        
        SELECT CASE count%
            CASE 0: LET ver.major = num%
            CASE 1: LET ver.minor = num%
            CASE 2: LET ver.patch = num%
            CASE 3: LET ver.build = num%
            CASE 4:
                EXIT DO
        END SELECT
        LET count% = count% + 1
        
    LOOP UNTIL find% = 0
END SUB

'=============================================================================
FUNCTION VER2STR$(ver AS VerNum)
    LET VER2STR$ = STRINT$(ver.major) + "." _
                 + STRINT$(ver.minor) + "." _
                 + STRINT$(ver.patch) + "." _
                 + STRINT$(ver.build)
END FUNCTION

'=============================================================================
FUNCTION VER2INT&(ver as VerNum)
    LET VER2INT& = VAL( _
        RIGHT$("00" + STRINT$(ver.major), 2) + _
        RIGHT$("00" + STRINT$(ver.minor), 2) + _
        RIGHT$("00" + STRINT$(ver.patch), 2) + _
        RIGHT$("00" + STRINT$(ver.build), 2) _
    )
END FUNCTION
